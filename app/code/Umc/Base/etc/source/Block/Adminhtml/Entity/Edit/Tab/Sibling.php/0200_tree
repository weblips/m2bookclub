
    /**
     * Prepare form
     *
     * @return $this
     */
    protected function _prepareForm()
    {
        /** @var \{{Namespace}}\{{Module}}\Model\{{Entity}} ${{entity}} */
        ${{entity}} = $this->_coreRegistry->registry('{{namespace}}_{{module}}_{{entity}}');
        $form   = $this->_formFactory->create();
        $form->setHtmlIdPrefix('{{entity}}_');
        $form->setFieldNameSuffix('{{entity}}');
        $fieldset = $form->addFieldset(
            'base_fieldset',
            [
                'legend'=>__('{{SiblingsLabel}}'),
                'class' => 'fieldset-wide'
            ]
        );
        $fieldset->addField(
            '{{siblings}}_ids',
            '\{{Namespace}}\{{Module}}\Block\Adminhtml\Helper\{{Sibling}}',
            [
                'name'  => '{{siblings}}_ids',
                'label' => __('{{SiblingsLabel}}'),
                'title' => __('{{SiblingsLabel}}'),
            ]
        );

        if (is_null(${{entity}}->get{{Siblings}}Ids())) {
            ${{entity}}->set{{Siblings}}Ids(${{entity}}->get{{Sibling}}Ids());
        }
        $form->addValues(${{entity}}->getData());
        $this->setForm($form);
        return parent::_prepareForm();
    }

    /**
     * Prepare label for tab
     *
     * @return string
     */
    public function getTabLabel()
    {
        return __('{{SiblingsLabel}}');
    }

    /**
     * Prepare title for tab
     *
     * @return string
     */
    public function getTabTitle()
    {
        return $this->getTabLabel();
    }

    /**
     * Can show tab in tabs
     *
     * @return boolean
     */
    public function canShowTab()
    {
        return true;
    }

    /**
     * Tab is hidden
     *
     * @return boolean
     */
    public function isHidden()
    {
        return false;
    }
