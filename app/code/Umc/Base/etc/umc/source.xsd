<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Umc_Base extension
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the MIT License
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/mit-license.php
 *
 * @category  Umc
 * @package   Umc_Base
 * @copyright 2015 Marius Strajeru
 * @license   http://opensource.org/licenses/mit-license.php MIT License
 * @author    Marius Strajeru <ultimate.module.creator@gmail.com>
 */
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="source">
        <xs:annotation>
            <xs:documentation>Root node</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="file" minOccurs="0" maxOccurs="unbounded" />
                <xs:element ref="scope" minOccurs="0" maxOccurs="unbounded" />
                <xs:element ref="depend_labels" minOccurs="0" maxOccurs="unbounded" />
            </xs:choice>
        </xs:complexType>
        <xs:unique name="uniqueFileId">
            <xs:annotation>
                <xs:documentation>File id must be unique</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="file"/>
            <xs:field xpath="@id"/>
        </xs:unique>
        <xs:unique name="uniqueScopeId">
            <xs:annotation>
                <xs:documentation>Scope id must be unique</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="scope"/>
            <xs:field xpath="@id"/>
        </xs:unique>
        <xs:unique name="uniqueDependLabelsId">
            <xs:annotation>
                <xs:documentation>Dependency labels group id must be unique</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="depend_labels"/>
            <xs:field xpath="@id"/>
        </xs:unique>
    </xs:element>

    <xs:element name="file">
        <xs:annotation>
            <xs:documentation>All files</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="label" type="xs:string" minOccurs="0" maxOccurs="1" />
                <xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1" />
                <xs:element ref="depends" maxOccurs="unbounded" minOccurs="0" />
                <xs:element name="extends" type="xs:string"  maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="implements" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="annotations" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="members" maxOccurs="unbounded" minOccurs="0" />
                <xs:element name="parent_construct_extra" type="xs:string" minOccurs="0" maxOccurs="1" />
                <xs:element ref="constructs" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="code" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
            <xs:attributeGroup ref="fileAttributeGroup"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="members">
        <xs:annotation>
            <xs:documentation>All member variables</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="member" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
        <xs:unique name="uniqueMemberId">
            <xs:annotation>
                <xs:documentation>Member id must be unique in the same group</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="member"/>
            <xs:field xpath="@id"/>
        </xs:unique>
        <xs:unique name="uniqueDependsId">
            <xs:annotation>
                <xs:documentation>Dependency group id must be unique</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="depends"/>
            <xs:field xpath="@id"/>
        </xs:unique>
    </xs:element>

    <xs:element name="member">
        <xs:annotation>
            <xs:documentation>All member variables</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="doc" type="xs:string" minOccurs="0" maxOccurs="1" /><!-- make mandatory in global schema -->
                <xs:element ref="depends" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
            <xs:attributeGroup ref="memberAttributeGroup"/>
        </xs:complexType>
        <xs:unique name="uniqueMemberDependsId">
            <xs:annotation>
                <xs:documentation>Dependency group id must be unique inside a member</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="depends"/>
            <xs:field xpath="@id"/>
        </xs:unique>
    </xs:element>

    <xs:element name="depends">
        <xs:annotation>
            <xs:documentation>All file dependencies</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="depend" maxOccurs="unbounded" minOccurs="0" />
            </xs:sequence>
            <xs:attributeGroup ref="dependsAttributeGroup"/>
        </xs:complexType>
        <xs:unique name="uniqueDependId">
            <xs:annotation>
                <xs:documentation>Dependency id must be unique inside a group</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="depend"/>
            <xs:field xpath="@id"/>
        </xs:unique>
    </xs:element>

    <xs:element name="depend">
        <xs:annotation>
            <xs:documentation>All dependencies in a group</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="val" maxOccurs="unbounded" minOccurs="0" />
            </xs:sequence>
            <xs:attributeGroup ref="dependAttributeGroup"/>
        </xs:complexType>
        <xs:unique name="uniqueValId">
            <xs:annotation>
                <xs:documentation>Dependency values id must be unique in the same dependency</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="val"/>
            <xs:field xpath="@id"/>
        </xs:unique>
    </xs:element>

    <xs:element name="val">
        <xs:annotation>
            <xs:documentation>All dependency values</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute type="xs:string" name="id" use="required"/>
                    <xs:attribute type="xs:boolean" name="disabled" use="optional"/>
                    <xs:attribute type="xs:boolean" name="bool" use="optional"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>

    </xs:element>

    <xs:element name="code">
        <xs:annotation>
            <xs:documentation>All code parts</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="part" maxOccurs="unbounded" minOccurs="0" />
            </xs:sequence>
        </xs:complexType>
        <xs:unique name="uniquePartId">
            <xs:annotation>
                <xs:documentation>Part id must be unique</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="part"/>
            <xs:field xpath="@id"/>
        </xs:unique>
    </xs:element>

    <xs:element name="annotations">
        <xs:annotation>
            <xs:documentation>All annotations</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="annotation" maxOccurs="unbounded" minOccurs="0" />
            </xs:sequence>
        </xs:complexType>
        <xs:unique name="uniqueAnnotationId">
            <xs:annotation>
                <xs:documentation>Annotation id must be unique</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="annotation"/>
            <xs:field xpath="@id"/>
        </xs:unique>
    </xs:element>

    <xs:element name="annotation">
        <xs:annotation>
            <xs:documentation>Each annotation</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="depends" maxOccurs="unbounded" minOccurs="0" />
            </xs:sequence>
            <xs:attributeGroup ref="annotationAttributeGroup"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="implements">
        <xs:annotation>
            <xs:documentation>Interfaces to implement</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="implement" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
        <xs:unique name="uniqueImplementId">
            <xs:annotation>
                <xs:documentation>Member id must be unique in the same group</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="implement"/>
            <xs:field xpath="@id"/>
        </xs:unique>
    </xs:element>

    <xs:element name="implement">
        <xs:annotation>
            <xs:documentation>Interface to implement</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="depends" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
            <xs:attributeGroup ref="implementAttributeGroup"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="constructs">
        <xs:annotation>
            <xs:documentation>Code after the parent constructor call</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="construct" maxOccurs="unbounded" minOccurs="0" />
            </xs:sequence>
        </xs:complexType>
        <xs:unique name="uniqueConstructId">
            <xs:annotation>
                <xs:documentation>Construct id must be unique</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="construct"/>
            <xs:field xpath="@id"/>
        </xs:unique>
    </xs:element>

    <xs:element name="construct">
        <xs:annotation>
            <xs:documentation>Constructor additional instructions</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="depends" maxOccurs="unbounded" minOccurs="0"/>
            </xs:sequence>
            <xs:attributeGroup ref="constructAttributeGroup"/>
        </xs:complexType>
    </xs:element>

    <!--<xs:element name="construct">-->
        <!--<xs:annotation>-->
            <!--<xs:documentation>Everything added after the parent constructor call</xs:documentation>-->
        <!--</xs:annotation>-->
        <!--<xs:complexType>-->
            <!--<xs:simpleContent>-->
                <!--<xs:extension base="xs:string">-->
                    <!--<xs:attribute type="xs:string" name="id" use="required"/>-->
                    <!--<xs:attribute type="xs:boolean" name="disabled" use="optional"/>-->
                    <!--<xs:attribute type="xs:int" name="sort" use="optional"/>-->
                    <!--<xs:attribute type="xs:string" name="scope" use="optional"/>-->
                <!--</xs:extension>-->
            <!--</xs:simpleContent>-->
        <!--</xs:complexType>-->
    <!--</xs:element>-->

    <xs:element name="part">
        <xs:annotation>
            <xs:documentation>Each file part</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="depends" maxOccurs="unbounded" minOccurs="0" />
            </xs:sequence>
            <xs:attributeGroup ref="partAttributeGroup"/>
        </xs:complexType>

    </xs:element>

    <xs:element name="scope">
        <xs:annotation>
            <xs:documentation>All allowed scopes</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="label" type="xs:string" minOccurs="0" maxOccurs="1" /><!-- make mandatory in global file -->
            </xs:sequence>
            <xs:attributeGroup ref="scopeAttributeGroup"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="depend_labels">
        <xs:annotation>
            <xs:documentation>All labels for dependency groups</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="depend_label" maxOccurs="unbounded" minOccurs="0" />
            </xs:sequence>
            <xs:attributeGroup ref="dependLabelsAttributeGroup"/>
        </xs:complexType>
        <xs:unique name="uniqueDependLabelId">
            <xs:annotation>
                <xs:documentation>Dependency labels id must be unique in the same group</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="depend_label"/>
            <xs:field xpath="@id"/>
        </xs:unique>
    </xs:element>

    <xs:element name="depend_label">
        <xs:annotation>
            <xs:documentation>All labels for dependencies</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="label" maxOccurs="1" minOccurs="0" /><!-- make mandatory in global file -->
            </xs:sequence>
            <xs:attributeGroup ref="dependLabelAttributeGroup"/>
        </xs:complexType>
    </xs:element>

    <xs:attributeGroup name="fileAttributeGroup">
        <xs:attribute name="id" type="xs:string"  use="required"/>
        <xs:attribute name="type" type="xs:string" use="optional"/><!-- make required in global schema -->
        <xs:attribute name="sort" type="xs:int"  use="optional"/>
        <xs:attribute name="disabled" type="xs:boolean" use="optional"/>
        <xs:attribute name="scope" type="xs:string" />
        <xs:attribute name="source" type="xs:string" use="optional" />
        <xs:attribute name="destination" type="xs:string" use="optional" />
        <xs:attribute name="translate" type="xs:string" use="optional" />
        <xs:attribute name="abstract" type="xs:string" use="optional" />
    </xs:attributeGroup>

    <xs:attributeGroup name="dependsAttributeGroup">
        <xs:attribute type="xs:string" name="id" use="required"/>
        <xs:attribute type="xs:boolean" name="disabled" use="optional"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="partAttributeGroup">
        <xs:attribute type="xs:string" name="id" use="required"/>
        <xs:attribute type="xs:int" name="sort" use="optional"/>
        <xs:attribute type="xs:boolean" name="disabled" use="optional"/>
        <xs:attribute type="xs:string" name="scope" use="optional"/>
        <xs:attribute type="xs:string" name="file" use="optional"/><!-- make mandatory in global schema -->
    </xs:attributeGroup>

    <xs:attributeGroup name="dependAttributeGroup">
        <xs:attribute type="xs:string" name="id" use="required"/>
        <xs:attribute type="xs:boolean" name="disabled" use="optional"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="scopeAttributeGroup">
        <xs:attribute type="xs:string" name="id" use="required"/>
        <xs:attribute type="xs:string" name="translate" use="optional"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="dependLabelsAttributeGroup">
        <xs:attribute type="xs:string" name="id" use="required"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="dependLabelAttributeGroup">
        <xs:attribute type="xs:string" name="id" use="required"/>
        <xs:attribute type="xs:string" name="translate" use="optional"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="memberAttributeGroup">
        <xs:attribute type="xs:string" name="id" use="required"/>
        <xs:attribute type="xs:string" name="type" use="optional"/>
        <xs:attribute type="xs:boolean" name="construct" use="optional"/>
        <xs:attribute type="xs:boolean" name="parent" use="optional"/>
        <xs:attribute type="xs:boolean" name="show" use="optional"/>
        <xs:attribute type="xs:string" name="var" use="optional"/>
        <xs:attribute type="xs:string" name="default" use="optional"/>
        <xs:attribute type="xs:boolean" name="core" use="optional"/>
        <xs:attribute type="xs:int" name="sort" use="required"/>
        <xs:attribute type="xs:boolean" name="constant" use="optional"/>
        <xs:attribute type="xs:string" name="scope" use="optional"/>
        <xs:attribute type="xs:boolean" name="skip" use="optional"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="implementAttributeGroup">
        <xs:attribute type="xs:string" name="id" use="required"/>
        <xs:attribute type="xs:int" name="sort" use="required"/>
        <xs:attribute type="xs:boolean" name="disabled" use="optional"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="constructAttributeGroup">
        <xs:attribute type="xs:string" name="id" use="required"/>
        <xs:attribute type="xs:boolean" name="disabled" use="optional"/>
        <xs:attribute type="xs:int" name="sort" use="optional"/>
        <xs:attribute type="xs:string" name="scope" use="optional"/>
        <xs:attribute type="xs:string" name="value" use="optional"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="annotationAttributeGroup">
        <xs:attribute type="xs:string" name="id" use="required"/>
        <xs:attribute type="xs:boolean" name="disabled" use="optional"/>
        <xs:attribute type="xs:string" name="params" use="optional"/>
        <xs:attribute type="xs:string" name="return" use="optional"/><!-- make required in merged schema -->
        <xs:attribute type="xs:int" name="sort" use="optional"/>
        <xs:attribute type="xs:string" name="scope" use="optional"/>
    </xs:attributeGroup>

</xs:schema>
